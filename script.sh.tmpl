#!/bin/bash
# This is a KDCompute plugin script, using the BASH shell language
#

#
# AUTOGENERATED_BY_KDCPLUGINSTUDIO
# CAUTION: DO NOT DELETE ANY VARIABLES BELOW, EVEN IF NOT USED BY YOUR ALGORITHM
# Below are variables provided by KDCompute need to find relevant items
#
CLASSNAME='<%= className %>'
WHEN='<%= when %>'
ALGORITHMNAME='<%= algorithmName %>'
VERSIONSTRING='<%= versionString %>'
VERSIONCODE='<%= versionCode %>'
PLUGINDIR='<%= pluginDir %>'
JOBDIR='<%= jobDir %>'

#
# AUTOGENERATED_BY_KDCPLUGINSTUDIO
# CAUTION: Modifying the next section can cause Plugin execution and KDCPluginStudio loading errors.
#  It is safer to make required changes within KDCPluginStudio
#  If you want to risk it, you can add args below, as long as they match those in your Specification (plugin.json) file
#
ARG1='<%= arg1 %>'
ARG2='<%= arg2 %>'

#
# AUTOGENERATED_BY_KDCPLUGINSTUDIO
# NOTE: The following can be modified without risking loading this script in KDCPluginStudio.
#  However the logic below still needs to work, along with subroutine call made for the plugin to execute correctly.
#
#Use an array to seperate segmenets of the command. This avoids errors that could occur due to spaces in filepaths
# Always provide a fullpath to any algorithm binaries, located by the variable PLUGINDIR
# Any commands, such as that below, is executed from JOBDIR. You don't need to ensure outputed files are prefixed
# Scripts execution can be done by calling its interpreter directly. For example:
#  /usr/bin/perl -w $PLUGINDIR/perl_script.pl
# And it should be the same for other languages like Python, Ruby, PHP, etc.
# Usage of these executors (e.g. /usr/bin/perl) need to installed on the targetted system. This can be managed in the dependencies scripts
OSTYPE="`uname`"
case $OSTYPE in
  'darwin')
       >&2 echo "OSX not supported"
       exit 1
       ;;
  'Linux')
       bash $PLUGINDIR/test.sh $ARG1 $ARG2
       ;;
  *)
       >&2 echo "unknown: $OSTYPE"
       exit 1
       ;;
esac